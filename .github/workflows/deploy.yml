name: Deploy Backend

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          
      - name: Install Composer Dependencies
        run: composer install --no-dev --optimize-autoloader
      
      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env

      - name: List files before deployment
        run: |
          echo "=== Files to be deployed ==="
          find . -type f -not -path "*/\.*" -not -path "*/vendor/*" | sort
          echo "=== Vendor files ==="
          find ./vendor -type f | wc -l
          echo "Total files to deploy: $(find . -type f | wc -l)"
      
      - name: ðŸ“‚ Deploy to Server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /
          exclude: |
            **/public/profile-images/**
            **/public/profile-images/avatars/**
            **/public/profile-images/covers/**
            **/public/profile-images/defaults/**
            **/logs/**
            **/.git/**
            **/.github/**
            **/.gitignore**
            **/.env.example**
            **/README.md**
            **/composer.lock**
            **/phpunit.xml**
            **/tests/**
            **/storage/framework/cache/**
            **/storage/framework/sessions/**
            **/storage/framework/views/**
            **/storage/logs/**
          dangerous-clean-slate: false
          timeout: 300000
          log-level: verbose
          dry-run: false

      - name: Check deployment status
        if: always()
        run: |
          echo "=== Deployment completed ==="
          echo "Current time: $(date)"
          echo "GitHub Action run ID: ${{ github.run_id }}"
          echo "GitHub Action run number: ${{ github.run_number }}"
