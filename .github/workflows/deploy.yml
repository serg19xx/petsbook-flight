name: üöÄ Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üîß Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, bcmath
        tools: composer:v2

    - name: üì¶ Install dependencies locally
      run: composer install --no-dev --optimize-autoloader

    - name: üîê Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: üåê Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 64.188.10.53 >> ~/.ssh/known_hosts

    - name: üì§ Deploy to server
      env:
        SERVER_IP: 64.188.10.53
        SERVER_USER: root
        PROJECT_PATH: /var/www/petsbook-flight
      run: |
        set -e
        set -x

        echo "üöÄ Deploying to $SERVER_IP..."

        # 1. –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
        rsync -avz --exclude='ssl/' --exclude='.git/' ./ $SERVER_USER@$SERVER_IP:/var/www/petsbook-flight/ || (echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ rsync"; exit 1)

        # 2. –ö–æ–ø–∏—Ä—É–µ–º .env.production
        ssh $SERVER_USER@$SERVER_IP "rm -f $PROJECT_PATH/.env.production" || (echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ .env.production"; exit 1)
        ssh $SERVER_USER@$SERVER_IP "echo '${{ secrets.ENV_PROD_PRODUCTION }}' > $PROJECT_PATH/.env.production && chmod 644 $PROJECT_PATH/.env.production" || (echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ .env.production"; exit 1)

        # 3. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        ssh $SERVER_USER@$SERVER_IP "cd $PROJECT_PATH && docker compose -f docker-compose.prod.yml down" || (echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ docker compose down"; exit 1)

        # 4. –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        ssh $SERVER_USER@$SERVER_IP "cd $PROJECT_PATH && docker compose -f docker-compose.prod.yml up -d --build" || (
          echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ docker compose up"
          ssh $SERVER_USER@$SERVER_IP "docker logs petsbook-php-prod || true"
          ssh $SERVER_USER@$SERVER_IP "docker logs petsbook-nginx-prod || true"
          exit 1
        )

        # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–¥–∞–∂–µ –µ—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ)
        ssh $SERVER_USER@$SERVER_IP "docker logs petsbook-php-prod || true"
        ssh $SERVER_USER@$SERVER_IP "docker logs petsbook-nginx-prod || true"

    - name: Create SSL certificates
      run: |
        mkdir -p ssl
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
          -keyout ssl/privkey.pem \
          -out ssl/fullchain.pem \
          -subj "/C=CA/ST=Ontario/L=Toronto/O=PetsBook/CN=api.petsbook.ca"
        chmod 644 ssl/fullchain.pem
        chmod 600 ssl/privkey.pem

    - name: Debug SSL secrets
      run: |
        echo "SSL_FULLCHAIN exists: ${{ secrets.SSL_FULLCHAIN != '' }}"
        echo "SSL_PRIVKEY exists: ${{ secrets.SSL_PRIVKEY != '' }}"
        echo "SSL_FULLCHAIN length: ${#SSL_FULLCHAIN}"
        echo "SSL_PRIVKEY length: ${#SSL_PRIVKEY}"

    - name: üéâ Deployment Status
      run: |
        echo "üéâ Deployed at: $(date)"
        echo "üåê API URL: https://64.188.10.53"